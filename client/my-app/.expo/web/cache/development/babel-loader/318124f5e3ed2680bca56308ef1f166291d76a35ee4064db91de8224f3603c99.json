{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Home from \"./src/screens/Home\";\nimport Favorites from \"./src/screens/Favorites\";\nimport Search from \"./src/screens/Search\";\nimport ProfilUser from \"./src/screens/ProfilUser\";\nimport Register from \"./src/screens/Register\";\nimport Login from \"./src/screens/Login\";\nimport FirstScreen from \"./src/screens/FirstScreen\";\nimport FilmsContextProvider from \"./src/context/FilmsContext\";\nimport Popular from \"./src/components/Listes/Popular\";\nimport ViewAll from \"./src/components/ViewAll\";\nimport MovieScreen from \"./src/components/MovieScreen\";\nimport TopRated from \"./src/components/Listes/TopRated\";\nimport ComingSoon from \"./src/components/Listes/ComingSoon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(FilmsContextProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          initialRouteName: \"FirstScreen\",\n          name: \"FirstScreen\",\n          component: FirstScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: Register\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"NewUser\",\n          component: NewUser,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Popular\",\n          component: Popular\n        }), _jsx(Stack.Screen, {\n          name: \"ViewAll\",\n          component: ViewAll\n        }), _jsx(Stack.Screen, {\n          name: \"MovieScreen\",\n          component: MovieScreen\n        }), _jsx(Stack.Screen, {\n          name: \"TopRated\",\n          component: TopRated\n        }), _jsx(Stack.Screen, {\n          name: \"ComingSoon\",\n          component: ComingSoon\n        })]\n      })\n    })\n  });\n}\nexport var NewUser = function NewUser() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = focused ? 'ios-home' : 'ios-home-outline';\n            } else if (route.name === 'Search') {\n              iconName = focused ? 'ios-search' : 'ios-search-outline';\n            } else if (route.name === \"Favorites\") {\n              iconName = focused ? 'ios-bookmark' : 'ios-bookmark-outline';\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? 'ios-person' : 'ios-person-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n          headerShown: false,\n          tabBarStyle: {\n            backgroundColor: '#282830'\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"Search\",\n        component: Search\n      }), _jsx(Tab.Screen, {\n        name: \"Favorites\",\n        component: Favorites\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfilUser\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","Home","Favorites","Search","ProfilUser","Register","Login","FirstScreen","FilmsContextProvider","Popular","ViewAll","MovieScreen","TopRated","ComingSoon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","App","children","Navigator","screenOptions","headerShown","Screen","initialRouteName","name","component","NewUser","options","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","styles","create","container","flex","alignItems","justifyContent"],"sources":["/Users/sacha/Desktop/Movie-App/client/my-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport Home from './src/screens/Home'\nimport Favorites from './src/screens/Favorites';\nimport Search from './src/screens/Search';\nimport ProfilUser from './src/screens/ProfilUser';\nimport Register from './src/screens/Register'\nimport Login from './src/screens/Login'\nimport FirstScreen from './src/screens/FirstScreen'\nimport FilmsContextProvider from './src/context/FilmsContext';\nimport Popular from './src/components/Listes/Popular';\nimport ViewAll from './src/components/ViewAll';\nimport MovieScreen from './src/components/MovieScreen';\nimport TopRated from './src/components/Listes/TopRated';\nimport ComingSoon from './src/components/Listes/ComingSoon';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n\n\nexport default function App() {\n  return (\n    <FilmsContextProvider>\n    <NavigationContainer >\n      <Stack.Navigator screenOptions={{headerShown:false}}>\n      <Stack.Screen initialRouteName='FirstScreen' name='FirstScreen' component={FirstScreen}/>\n      <Stack.Screen name='Register' component={Register}/>\n      <Stack.Screen name='Login' component={Login}/>\n      <Stack.Screen name='NewUser' component={NewUser} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Popular\" component={Popular}/>\n      <Stack.Screen name=\"ViewAll\" component={ViewAll}/>\n      <Stack.Screen name=\"MovieScreen\" component={MovieScreen}/>\n      <Stack.Screen name='TopRated' component={TopRated}/>\n      <Stack.Screen name='ComingSoon' component={ComingSoon}/>\n\n\n      </Stack.Navigator>\n    </NavigationContainer>\n    </FilmsContextProvider>\n  );\n}\n\nexport const NewUser = () => {\n  return (\n    <>\n    <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n  \n        if (route.name === 'Home') {\n          iconName = focused\n            ? 'ios-home'\n            : 'ios-home-outline';\n        } else if (route.name === 'Search') {\n          iconName = focused ? 'ios-search' : 'ios-search-outline';\n        } else if (route.name === \"Favorites\") {\n          iconName = focused ? 'ios-bookmark' : 'ios-bookmark-outline';\n        } else if (route.name === \"Profile\") {\n          iconName = focused ? 'ios-person' : 'ios-person-outline';\n        }\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      \n      tabBarActiveTintColor: 'tomato',\n      tabBarInactiveTintColor: 'gray',\n      headerShown: false, \n      tabBarStyle: { backgroundColor: '#282830' }, // Set the background color here\n\n    })}\n  >\n    \n    <Tab.Screen name=\"Home\" component={Home} />\n    <Tab.Screen name=\"Search\" component={Search} />\n    <Tab.Screen name=\"Favorites\" component={Favorites} />\n    <Tab.Screen name=\"Profile\" component={ProfilUser} />\n  </Tab.Navigator>\n  </>\n  \n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}